diff --git a/launcher/Launcher.qml b/launcher/Launcher.qml
index 40f0fe2..76e6cf1 100644
--- a/usr/share/lipstick-jolla-home-qt5/launcher/Launcher.qml
+++ b/usr/share/lipstick-jolla-home-qt5/launcher/Launcher.qml
@@ -10,17 +10,28 @@ import org.nemomobile.lipstick 0.1
 import Sailfish.Silica 1.0
 import Sailfish.Silica.private 1.0 as SilicaPrivate
 import Sailfish.Lipstick 1.0
-import org.nemomobile.dbus 2.0
+import org.nemomobile.configuration 1.0
 import com.jolla.lipstick 0.1
 
 SilicaListView {
     id: launcherPager
 
+    ConfigurationGroup {
+        id: launcherSettings
+        path: "/apps/lipstick-jolla-home-qt5/launcher"
+        property bool freeScroll: false
+        property bool useScroll: true
+        onFreeScrollChanged: launcher.manageDummyPages()
+    }    
+
     property bool launcherActive: Lipstick.compositor.launcherLayer.active
     onLauncherActiveChanged: if (!launcherActive) { resetPosition(400) }
 
     property bool editMode: launcher.launcherEditMode
     onEditModeChanged: {
+        if (launcherSettings.freeScroll) {
+            return
+        }
         if (editMode) {
             snapMode = ListView.NoSnap
             highlightRangeMode = ListView.NoHighlightRange
@@ -30,13 +41,18 @@ SilicaListView {
         }
     }
 
+    VerticalScrollDecorator {
+        flickable: launcherPager
+        visible: launcherSettings.freeScroll && launcherSettings.useScroll && launcherPager.contentHeight > launcherPager.height
+    }
+
     model: ListModel {}
     delegate: Item {
         width: launcherPager.width
-        height: launcherPager.height
+        height: launcherSettings.freeScroll ? launcher.cellHeight : launcherPager.height
     }
-    snapMode: ListView.SnapOneItem
-    highlightRangeMode: ListView.StrictlyEnforceRange
+    snapMode: launcherSettings.freeScroll ? ListView.NoSnap : ListView.SnapOneItem
+    highlightRangeMode: launcherSettings.freeScroll ? ListView.NoHighlightRange : ListView.StrictlyEnforceRange
     cacheBuffer: height*model.count
     maximumFlickVelocity: 4000*Theme.pixelRatio
     highlightMoveDuration: 300
@@ -121,8 +137,6 @@ SilicaListView {
 
         LauncherGrid {
             id: launcher
-            property Item remorse
-            property bool removeApplicationEnabled
 
             launcherEditMode: removeApplicationEnabled && !openedChildFolder
 
@@ -175,11 +189,13 @@ SilicaListView {
             Component.onCompleted: manageDummyPages()
             onContentHeightChanged: manageDummyPages()
             onLauncherEditModeChanged: manageDummyPages()
+            onColumnsChanged: manageDummyPages()
+            onCountChanged: manageDummyPages()
 
             function manageDummyPages() {
                 if (launcherPager.height > 0) {
                     // Create dummy pages to allow paging
-                    var pageCount = Math.ceil(contentHeight/launcherPager.height)
+                    var pageCount = launcherSettings.freeScroll ? Math.ceil(count / columns) : Math.ceil(contentHeight/launcherPager.height)
                     while (launcherPager.model.count < pageCount) {
                         launcherPager.model.append({ "name": "dummy" })
                     }
@@ -193,46 +209,6 @@ SilicaListView {
             SilicaPrivate.VisibilityCull {
                 target: launcher.contentItem
             }
-
-            function removeApplication(desktopFile, title) {
-                if (!remorse) {
-                    remorse = remorseComponent.createObject(launcherPager)
-                } else if (remorse.desktopFile !== "" && remorse.desktopFile !== desktopFile) {
-                    remorse.removePackageByDesktopFile()
-                    remorse.cancel()
-                }
-                remorse.desktopFile = desktopFile
-
-                //: Notification indicating that an application will be removed, %1 will be replaced by application name
-                //% "Removing %1"
-                remorse.execute(qsTrId("lipstick-jolla-home-no-removing").arg(title))
-            }
-
-            Component {
-                id: remorseComponent
-
-                RemorsePopup {
-                    property string desktopFile
-
-                    function removePackageByDesktopFile() {
-                        if (desktopFile !== "") {
-                            storeClientInterface.call("removePackageByDesktopFile", desktopFile)
-                            desktopFile = ""
-                        }
-                    }
-
-                    z: 100
-                    onTriggered: removePackageByDesktopFile()
-                    onCanceled: desktopFile = ""
-
-                    DBusInterface {
-                        id: storeClientInterface
-                        service: "com.jolla.jollastore"
-                        path: "/StoreClient"
-                        iface: "com.jolla.jollastore"
-                    }
-                }
-            }
         }
     }
 }
diff --git a/launcher/LauncherFolder.qml b/launcher/LauncherFolder.qml
index 3b9a354..af82f9a 100644
--- a/usr/share/lipstick-jolla-home-qt5/launcher/LauncherFolder.qml
+++ b/usr/share/lipstick-jolla-home-qt5/launcher/LauncherFolder.qml
@@ -12,39 +12,21 @@ import Sailfish.Silica.private 1.0
 import Sailfish.Lipstick 1.0
 import com.jolla.lipstick 0.1
 
-Rectangle {
+Dialog {
     id: launcherFolder
+    _clickablePageIndicators: false
+    allowedOrientations: Lipstick.compositor.topmostWindowOrientation
+    property var launcherPager
     property alias model: launcherGrid.model
     property bool selectIcon
     property Item iconSelector
     property int visibleRowCount: launcherGrid.rows-2
 
-    Connections {
-        target: Desktop.instance.switcher
-        onAppShowInProgressChanged: if (Desktop.instance.switcher.appShowInProgress) close()
-    }
-
-    function close() {
+    function close(animate) {
         launcherGrid.setEditMode(false)
-        opacity = 0.0
-        enabled = false
-        destroy(450)
+        reject()
     }
 
-    z: 10
-    opacity: 0.0
-    Behavior on opacity { SmoothedAnimation { duration: 400; velocity: 1000 / duration } }
-
-    gradient: Gradient {
-        GradientStop { position: 0.0; color: Theme.rgba("black", 1.0) }
-        GradientStop { position: 1.0; color: Theme.rgba("black", 0.8) }
-    }
-
-    width: launcherPager.width
-    height: launcherPager.height
-
-    Component.onCompleted: opacity = 1.0
-
     Connections {
         target: Lipstick.compositor
         onDisplayOff: launcherFolder.close()
@@ -91,7 +73,7 @@ Rectangle {
                 } else if (selectIcon) {
                     selectIcon = false
                 } else if (!launcherGrid.launcherEditMode) {
-                    launcherFolder.close()
+                    launcherFolder.close(true)
                 }
                 launcherGrid.setEditMode(false)
             }
@@ -100,11 +82,12 @@ Rectangle {
         Rectangle {
             id: header
             width: parent.width
-            height: launcherGrid.cellHeight - Theme.fontSizeExtraSmall/2
+            height: launcherIcon.height + Theme.paddingLarge
             gradient: Gradient {
                 GradientStop { position: 0.0; color: Theme.rgba(Theme.primaryColor, 0.0) }
                 GradientStop { position: 1.0; color: Theme.rgba(Theme.primaryColor, 0.15) }
             }
+            opacity: 1 - footer.opacity
 
             Image {
                 anchors.horizontalCenter: parent.horizontalCenter
@@ -112,22 +95,23 @@ Rectangle {
             }
 
             MouseArea {
-                id: icon
+                id: iconHeader
                 objectName: "LauncherFolder_icon"
-                width: launcherGrid.cellWidth
+                width: height
                 height: parent.height
-                x: launcherGrid.x // launcherGrid is centered in it's parent
-                LauncherIcon {
-                    y: (launcherGrid.cellHeight - height - Theme.fontSizeExtraSmall)/2
-                    icon: model.iconId
-                    anchors.horizontalCenter: parent.horizontalCenter
-                    pressed: icon.pressed && icon.containsMouse
+                x: Theme.paddingMedium
+                FolderIconLoader {
+                    id: launcherIcon
+                    folder: model
+                    anchors.centerIn: parent
+                    pressed: iconHeader.pressed && iconHeader.containsMouse
                     Text {
                         font.pixelSize: Theme.fontSizeExtraLarge
                         font.family: Theme.fontFamilyHeading
                         color: Theme.primaryColor
                         text: model.itemCount
                         anchors.centerIn: parent
+                        visible: launcherIcon.index < 16
                     }
                 }
                 onClicked: {
@@ -145,7 +129,7 @@ Rectangle {
             TextField {
                 id: titleEditor
                 anchors {
-                    left: icon.right
+                    left: iconHeader.right
                     leftMargin: -Theme.paddingLarge
                     right: parent.right
                     verticalCenter: parent.verticalCenter
@@ -179,8 +163,8 @@ Rectangle {
                 anchors {
                     right: titleEditor.right
                     rightMargin: Theme.horizontalPageMargin
-                    top: titleEditor.bottom
-                    topMargin: -Theme.paddingMedium
+                    bottom: parent.bottom
+                    bottomMargin: Theme.paddingMedium
                 }
                 font.pixelSize: Theme.fontSizeSmall
                 color: Theme.highlightColor
@@ -197,8 +181,8 @@ Rectangle {
             // Use a clipper item to clip slightly outside the GridView area
             anchors.top: header.bottom
             width: parent.width
-            height: launcherGrid.height + Theme.fontSizeExtraSmall
-            clip: true
+            height: launcherGrid.height
+            clip: launcherGrid.reorderItem ? false : true
 
             LauncherGrid {
                 id: launcherGrid
@@ -213,7 +197,6 @@ Rectangle {
                 }
 
                 gridManager.dragContainer: launcherFolder
-                onItemLaunched: launcherFolder.close()
 
                 NumberAnimation {
                     id: contentYAnimation
@@ -236,23 +219,24 @@ Rectangle {
                             } else if (selectIcon) {
                                 selectIcon = false
                             } else if (!launcherGrid.launcherEditMode) {
-                                launcherFolder.close()
+                                launcherFolder.close(true)
                             }
                             launcherGrid.setEditMode(false)
                         }
                     }
                 }
 
-                VerticalScrollDecorator {}
+                VerticalScrollDecorator { anchors.rightMargin: -launcherGrid.x }
 
                 y: Theme.fontSizeExtraSmall/2
-                height: cellHeight * visibleRowCount
+                height: launcherFolder.height - header.height
                 cacheBuffer: height
                 displayMarginBeginning: Theme.fontSizeExtraSmall/2
                 displayMarginEnd: Theme.fontSizeExtraSmall/2
                 enabled: !titleEditor.activeFocus && !selectIcon
                 Behavior on opacity { FadeAnimation { duration: 300 } }
                 opacity: enabled ? 1.0 : (selectIcon ? 0.0 : 0.3)
+                footer: Item { width: 1; height: Theme.paddingSmall}
             }
         }
 
@@ -263,21 +247,19 @@ Rectangle {
                 if (item) {
                     // The odd launcherGrid.reorderItem.y line below is to force revaluation of this binding
                     launcherGrid.reorderItem.y
-                    var itemY = launcherGrid.mapFromItem(item, 0, 0).y
-                    if (itemY + item.height/2 > launcherGrid.height)
+                    var itemY = header.mapFromItem(item, 0, 0).y
+                    if (itemY < header.height / 2)
                         return true
                 }
                 return false
             }
             property bool shown: (launcherGrid.launcherEditMode && launcherGrid.reorderItem ||
                                   model.itemCount > launcherGrid.columns * visibleRowCount) && !selectIcon
-            height: launcherGrid.cellHeight - Theme.fontSizeExtraSmall/2
+            height: header.height
             width: parent.width
-            y: parent.height - (shown ? height : 0)
-            Behavior on y { NumberAnimation { duration: 300; easing.type: Easing.InOutQuad } }
+            y: 0
             opacity: launcherGrid.launcherEditMode && launcherGrid.reorderItem ?
-                         (draggedIntoFooter ? 1.0 : 0.5) :
-                         (model.itemCount > launcherGrid.columns * visibleRowCount && shown ? 0.5 : 0.0)
+                         (draggedIntoFooter ? 1.0 : 0.8) : 0.0
             Behavior on opacity { FadeAnimation {} }
             color: Theme.highlightDimmerColor
             gradient: Gradient {
@@ -328,18 +310,19 @@ Rectangle {
                     id: folderIconGrid
                     columns: Math.floor(launcherGrid.width/launcherGrid.cellWidth)
                     Repeater {
-                        model: 16
+                        model: 20
                         delegate: MouseArea {
                             id: folderIcon
-                            objectName: "LauncherFolder_folderIcon"
                             width: launcherGrid.cellWidth
                             height: launcherGrid.cellHeight
-                            LauncherIcon {
+                            FolderIconLoader {
                                 id: folderLauncherIcon
                                 anchors {
                                     centerIn: parent
                                     verticalCenterOffset: Math.round(-Theme.fontSizeExtraSmall/2)
                                 }
+                                folder: launcherFolder.model
+                                index: model.index
                                 icon: "image://theme/icon-launcher-folder-" + (index >= 9 ? (index+1) : "0" + (index+1))
                                 pressed: folderIcon.pressed && folderIcon.containsMouse
                                 opacity: icon.indexOf(launcherFolder.model.iconId) !== -1 ? 0.3 : 1.0
diff --git a/launcher/LauncherGrid.qml b/launcher/LauncherGrid.qml
index 2360cb0..a7237b5 100644
--- a/usr/share/lipstick-jolla-home-qt5/launcher/LauncherGrid.qml
+++ b/usr/share/lipstick-jolla-home-qt5/launcher/LauncherGrid.qml
@@ -13,23 +13,62 @@
 import Sailfish.Policy 1.0
 import Sailfish.Lipstick 1.0
 import "../main"
+import org.nemomobile.configuration 1.0
 
 SilicaGridView {
     id: gridview
+	
+    ConfigurationGroup {
+        id: launcherGridSettings
+        path: "/apps/lipstick-jolla-home-qt5/launcherGrid"
+        property int columns: 4 // Math.floor(launcherPager.width / minimumCellWidth)
+        property int rows: 6 // Math.floor(launcherPager.height / minimumCellHeight)
+        property int lcolumns: 4
+        property int lrows: 4
+        property bool editLabelVisible: true
+        property bool zoomIcons: false
+        property bool zoomFonts: false
+        property real zoomValue: 1.0
+    }
+
+    property bool isPortrait: launcherPager.height > launcherPager.width
+
+    add: Transition {
+        SequentialAnimation {
+            NumberAnimation { properties: "z"; to: -1; duration: 1 }
+            NumberAnimation { properties: "opacity"; to: 0.0; duration: 1 }
+            NumberAnimation { properties: "x,y"; duration: 1 }
+            NumberAnimation { properties: "z"; to: 0; duration: 200 }
+            NumberAnimation { properties: "opacity"; from: 0.0; to: 1.0; duration: 100 }
+        }
+    }
+    remove: Transition {
+        ParallelAnimation {
+            NumberAnimation { properties: "z"; to: -1; duration: 1 }
+            NumberAnimation { properties: "x"; to: 0; duration: 100 }
+            NumberAnimation { properties: "opacity"; to: 0.0; duration: 100 }
+        }
+    }
+    move: Transition {
+        NumberAnimation { properties: "x,y"; duration: 200 }
+    }
+    displaced: Transition {
+        NumberAnimation { properties: "x,y"; duration: 200 }
+    }
 
     // The multipliers below for Large screens are magic. They look good on Jolla tablet.
     property real minimumCellWidth: Screen.sizeCategory >= Screen.Large ? Theme.itemSizeExtraLarge * 1.6 : Theme.itemSizeExtraLarge
     // phone reference row height: 960 / 6
     property real minimumCellHeight: Screen.sizeCategory >= Screen.Large ? Theme.itemSizeExtraLarge * 1.6 : Theme.pixelRatio * 160
-    property int rows: Math.floor(launcherPager.height / minimumCellHeight)
-    property int columns: Math.floor(launcherPager.width / minimumCellWidth)
+    property int rows: isPortrait ? launcherGridSettings.rows : launcherGridSettings.lrows
+    property int columns: isPortrait ? launcherGridSettings.columns : launcherGridSettings.lcolumns
     property int horizontalMargin: Screen.sizeCategory >= Screen.Large ? 6 * Theme.paddingLarge : Theme._homePageMargin
-    property int initialCellWidth: (launcherPager.width - 2*horizontalMargin) / columns
+    property int initialCellWidth: (launcherPager.width - 2*horizontalMargin) / (columns + (isPortrait ? 0 : 1))
     property bool launcherEditMode: removeApplicationEnabled
     property var launcherModel: model
     property bool rootFolder
     property QtObject folderComponent
-    property Item openedChildFolder
+    property Dialog openedChildFolder
     property alias reorderItem: gridManager.reorderItem
     property alias gridManager: gridManager
     readonly property bool largeScreen: Screen.sizeCategory >= Screen.Large
@@ -40,6 +79,13 @@
     // Increase cellWidth so that icon vertical edges are Theme.paddingLarge away from display edges
     cellWidth: Math.floor(initialCellWidth + (initialCellWidth - Theme.iconSizeLauncher) / (columns - 1))
     cellHeight: Math.round(launcherPager.height / rows)
+	
+    onCellHeightChanged: updateHintHeight()
+    Component.onCompleted: updateHintHeight()
+
+    function updateHintHeight() {
+        Lipstick.compositor.launcherLayer.hintHeight = cellHeight
+    }
 
     function categoryQsTrIds() {
         //% "AudioVideo"
@@ -75,15 +121,7 @@
             // should never happen
             openedChildFolder.close()
         }
-
-        if (!folderComponent) {
-            folderComponent = Qt.createComponent("LauncherFolder.qml")
-            if (folderComponent.status == Component.Error) {
-                console.log("Error opening folder", folderComponent.errorString())
-                return
-            }
-        }
-        openedChildFolder = folderComponent.createObject(launcherPager, { 'model': folder })
+		openedChildFolder = pageStack.push(Qt.resolvedUrl("LauncherFolder.qml"), { 'model': folder, 'launcherPager': launcherPager })
     }
 
     function setEditMode(enabled) {
@@ -260,28 +298,30 @@
             }
         }
         onReleased: {
-            if (!rootFolder && gridview.mapFromItem(wrapper.contentItem, 0, 0).y + wrapper.height/2 > gridview.height) {
+            if (!rootFolder && gridview.mapFromItem(wrapper.contentItem, 0, 0).y + launcherIcon.size < 0) {
                 var parentFolderIndex = launcherModel.parentFolder.indexOf(launcherModel)
                 launcherModel.parentFolder.moveToFolder(model.object, launcherModel.parentFolder, parentFolderIndex+1)
             }
         }
 
-        LauncherIcon {
+        FolderIconLoader {
             id: launcherIcon
             anchors {
                 centerIn: parent
                 verticalCenterOffset: Math.floor(-launcherText.height/2)
             }
             icon: model.object.iconId
+			folder: model.object
             pressed: down
             opacity: isUpdating && folderItemCount == 0 ? 0.2 : 1.0
+			size: Theme.iconSizeLauncher * (launcherGridSettings.zoomIcons ? launcherGridSettings.zoomValue : 1.0)
             Text {
-                font.pixelSize: Theme.fontSizeExtraLarge
+                font.pixelSize: Theme.fontSizeExtraLarge * (launcherGridSettings.zoomIcons ? launcherGridSettings.zoomValue : 1.0)
                 font.family: Theme.fontFamilyHeading
                 text: folderItemCount > 0 ? folderItemCount : ""
                 color: Theme.primaryColor
                 anchors.centerIn: parent
-                visible: !isUpdating || model.object.updatingProgress < 0 || model.object.updatingProgress > 100
+                visible: launcherIcon.index < 16 && (!launcherEditMode || isFolder || launcherGridSettings.editLabelVisible)
                 opacity: reorderItem && folderItemCount >= 99 ? 0.3 : 1.0
             }
         }
@@ -331,7 +371,7 @@
                 enabled: launcherEditMode && policy.value
                 opacity: enabled ? 1.0 : 0.0
                 visible: launcherEditMode && !isFolder && AppControl.isUninstallable(object.filePath) && !object.isUpdating
-                onClicked: launcher.removeApplication(object.filePath, object.title)
+                onClicked: removeApplication(object.filePath, object.title)
             }
         }
     }

diff --git a/launcher/LauncherView.qml b/launcher/LauncherView.qml
index 44e2122..9e3377a 100644
--- a/usr/share/lipstick-jolla-home-qt5/launcher/LauncherView.qml
+++ b/usr/share/lipstick-jolla-home-qt5/launcher/LauncherView.qml
@@ -3,6 +3,9 @@ import QtQuick 2.0
 import org.nemomobile.lipstick 0.1
 import Sailfish.Silica 1.0
 import com.jolla.lipstick 0.1
+import org.nemomobile.configuration 1.0
+import Sailfish.Silica.private 1.0
+import org.nemomobile.dbus 2.0
 import "../main"
 
 ApplicationWindow {
@@ -14,21 +17,92 @@ ApplicationWindow {
 
     allowedOrientations: Lipstick.compositor.topmostWindowOrientation
 
-    children: Rectangle {
+    ConfigurationGroup {
+        id: launcherViewSettings
+        path: "/apps/lipstick-jolla-home-qt5/launcherView"
+        property bool glassBackground: false
+        property bool themedBackgroundColor: false
+        property real backgroundOpacity: 1.0
+    }
+
+    children: Item {
         z: -1
-        color: "black"
         anchors.fill: parent
+        opacity: launcherViewSettings.backgroundOpacity
+        onOpacityChanged: console.log(opacity)
+        Component.onCompleted: console.log(opacity, launcherViewSettings.glassBackground)
+
+        Wallpaper {
+            anchors.centerIn: parent
+            visible: launcherViewSettings.glassBackground
+            width: parent.width
+            height: parent.height
+            source: Theme.backgroundImage
+            windowRotation: 360 - pageStack.currentPage.rotation
+            verticalOffset: Lipstick.compositor.launcherLayer.y
+            horizontalOffset: -Lipstick.compositor.launcherLayer.x
+        }
+
+        Rectangle {
+            anchors.fill: parent
+            visible: !launcherViewSettings.glassBackground
+            color: launcherViewSettings.themedBackgroundColor ? Theme.highlightDimmerColor : "black"
+            Component.onCompleted: console.log(color)
+        }
+    }
+
+    property Item remorse
+    property bool removeApplicationEnabled
+
+    function removeApplication(desktopFile, title) {
+        if (!remorse) {
+            remorse = remorseComponent.createObject(pageStack.currentPage)
+        } else if (remorse.desktopFile !== "" && remorse.desktopFile !== desktopFile) {
+            remorse.removePackageByDesktopFile()
+            remorse.cancel()
+        }
+        remorse.desktopFile = desktopFile
+
+        //: Notification indicating that an application will be removed, %1 will be replaced by application name
+        //% "Removing %1"
+        remorse.execute(qsTrId("lipstick-jolla-home-no-removing").arg(title))
+    }
+
+    Component {
+        id: remorseComponent
+
+        RemorsePopup {
+            property string desktopFile
+
+            function removePackageByDesktopFile() {
+                if (desktopFile !== "") {
+                    storeClientInterface.call("removePackageByDesktopFile", desktopFile)
+                    desktopFile = ""
+                }
+            }
+
+            z: 100
+            onTriggered: removePackageByDesktopFile()
+            onCanceled: desktopFile = ""
+
+            DBusInterface {
+                id: storeClientInterface
+                service: "com.jolla.jollastore"
+                path: "/StoreClient"
+                iface: "com.jolla.jollastore"
+            }
+        }
     }
 
     initialPage: Component { Page {
         id: page
 
-        allowedOrientations: Orientation.All
+        allowedOrientations: Lipstick.compositor.topmostWindowOrientation
         layer.enabled: orientationTransitionRunning
 
         Launcher {
             // We don't want the pager to resize due to keyboard being shown.
-            height: Math.ceil(page.height + pageStack.panelSize)
+            height: page.height
             width: parent.width
         }
 
diff --git a/layers/LauncherLayer.qml b/layers/LauncherLayer.qml
index eb1a50d..1fe05eb 100644
--- a/usr/share/lipstick-jolla-home-qt5/layers/LauncherLayer.qml
+++ b/usr/share/lipstick-jolla-home-qt5/layers/LauncherLayer.qml
@@ -10,6 +10,8 @@ EdgeLayer {
     property bool allowed
     property bool closedFromBottom
 
+    opaque: false
+
     peekFilter {
         enabled: Lipstick.compositor.systemInitComplete
         onGestureTriggered: closedFromBottom = peekFilter.bottomActive
